#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

- name: Pulsar installation
  hosts: all
  connection: ssh
  become: true
  tasks:
    - set_fact:
        zookeeperServers: "{{ groups['zookeeper-pulsar'] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | map('regex_replace', '^(.*)$', '\\1:2181') | join(',') }}"
        serviceUrl: "pulsar://{{ hostvars[groups['broker'][0]].private_ip }}:6650/"
        httpUrl: "http://{{ hostvars[groups['broker'][0]].private_ip }}:8080/"
        pulsarVersion: "2.6.0"
    - file: path=/opt/pulsar state=absent
    - file: path=/opt/pulsar state=directory
    - name: Download Pulsar binary package
      unarchive:
        src: "https://github.com/streamnative/pulsar/releases/download/v2.7.0.5/apache-pulsar-2.7.0.5-bin.tar.gz"
        remote_src: yes
        dest: /opt/pulsar
        extra_opts: ["--strip-components=1"]
    - name: Create directory for protocol handlers
      file:
        path: /opt/pulsar/protocols
        state: directory
    - name: Download kop
      get_url:
        url: https://github.com/streamnative/kop/releases/download/v2.7.0.5/pulsar-protocol-handler-kafka-2.7.0.5.nar
        dest: /opt/pulsar/protocols
    - set_fact:
        private_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
        max_heap_memory: "8g"
        max_direct_memory: "16g"
    - template:
        src: "pulsar/templates/pulsar_env.sh"
        dest: "/opt/pulsar/conf/pulsar_env.sh"
    - template:
        src: "pulsar/templates/bkenv.sh"
        dest: "/opt/pulsar/conf/bkenv.sh"
    - name: Change locale to en_US.utf-8
      shell: |
        echo 'LANG=en_US.utf-8
              LC_ALL=en_US.utf-8' > /etc/environment

- name: ZooKeeper setup
  hosts: zookeeper-pulsar
  connection: ssh
  become: true
  tasks:
    - set_fact:
        zid: "{{ groups['zookeeper-pulsar'].index(inventory_hostname) }}"
        max_heap_memory: "512m"
        max_direct_memory: "512m"
    - file:
        path: "/opt/pulsar/{{ item }}"
        state: directory
      with_items:
        - data/zookeeper
    - template:
        src: "pulsar/templates/pulsar_env.sh"
        dest: "/opt/pulsar/conf/pulsar_env.sh"
    - template:
        src: "pulsar/templates/bkenv.sh"
        dest: "/opt/pulsar/conf/bkenv.sh"
    - template:
        src: "pulsar/templates/zoo.cfg"
        dest: "/opt/pulsar/conf/zookeeper.conf"
    - template:
        src: "pulsar/templates/myid"
        dest: "/opt/pulsar/data/zookeeper/myid"
    - template:
        src: "pulsar/templates/zookeeper.service"
        dest: "/etc/systemd/system/zookeeper.service"
    - systemd:
        state: restarted
        daemon_reload: yes
        name: "zookeeper"
    - command: >
        bin/pulsar initialize-cluster-metadata --cluster local
        --zookeeper localhost:2181
        --configuration-store localhost:2181
        --web-service-url {{ httpUrl }}
        --broker-service-url {{ serviceUrl }}
      args:
        chdir: /opt/pulsar
      when: groups['zookeeper-pulsar'][0] == inventory_hostname

- name: BookKeeper setup
  hosts: broker
  connection: ssh
  become: true
  tasks:
    - template:
        src: "pulsar/templates/bookkeeper.conf"
        dest: "/opt/pulsar/conf/bookkeeper.conf"
    - name: Install bookkeeper systemd service
      template:
        src: "pulsar/templates/bookkeeper.service"
        dest: "/etc/systemd/system/bookkeeper.service"
    - systemd:
        state: restarted
        daemon_reload: yes
        name: "bookkeeper"

- name: Pulsar configuration and systemd setup
  hosts: broker
  connection: ssh
  become: true
  tasks:
    - name: Set up broker
      template:
        src: "pulsar/templates/broker.conf"
        dest: "/opt/pulsar/conf/broker.conf"
    - template:
        src: "pulsar/templates/pulsar.service"
        dest: "/etc/systemd/system/pulsar.service"
    - systemd:
        state: restarted
        daemon_reload: yes
        name: "pulsar"

- name: Pulsar benchmarking client setup
  hosts: client-pulsar
  connection: ssh
  become: true
  tasks:
    - name: Set up client config
      template:
        src: "pulsar/templates/client.conf"
        dest: "/opt/pulsar/conf/client.conf"
    - file: path=/opt/benchmark state=absent
    - name: Copy benchmark code
      unarchive:
        src: ../package/target/openmessaging-benchmark-0.0.1-SNAPSHOT-bin.tar.gz
        dest: /opt
    - shell: mv /opt/openmessaging-benchmark-0.0.1-SNAPSHOT /opt/benchmark

    - template:
        src: "pulsar/templates/workers.yaml"
        dest: "/opt/benchmark/workers.yaml"
    - name: Get list of driver config files
      raw: ls -1 /opt/benchmark/driver-pulsar/*.yaml
      register: drivers_list

    - name: Configure service URL
      lineinfile:
         dest: '{{ item }}'
         regexp: '^  serviceUrl\: '
         line: '  serviceUrl: {{ serviceUrl }}'
      with_items: '{{ drivers_list.stdout_lines }}'
    - name: Configure http URL
      lineinfile:
         dest: '{{ item }}'
         regexp: '^  httpUrl: '
         line: '  httpUrl: {{ httpUrl }}'
      with_items: '{{ drivers_list.stdout_lines }}'
    - name: Configure memory
      lineinfile:
         dest: /opt/benchmark/bin/benchmark-worker
         regexp: '^JVM_MEM='
         line: 'JVM_MEM="-Xms8G -Xmx8G -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions -XX:+AggressiveOpts -XX:+DoEscapeAnalysis -XX:G1NewSizePercent=50 -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+PerfDisableSharedMem -XX:+AlwaysPreTouch -XX:-UseBiasedLocking"'
    - name: Install benchmark systemd service
      template:
        src: "pulsar/templates/benchmark-worker.service"
        dest: "/etc/systemd/system/benchmark-worker.service"
    - systemd:
        state: restarted
        daemon_reload: yes
        name: "benchmark-worker"

- name: Prometheus installation
  hosts: prometheus-pulsar
  connection: ssh
  become: true
  tasks:
    - name: Add Extras Repo
      shell: yum-config-manager --enable rhui-REGION-rhel-server-extras
    - name: Install RPM packages
      yum: pkg={{ item }} state=latest
      with_items:
          - docker
    - set_fact:
        prometheusVersion: "2.2.1"
    - file: path=/opt/prometheus state=absent
    - file: path=/opt/prometheus state=directory
    - name: Download Prometheus Binary Package
      unarchive:
        src: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheusVersion }}/prometheus-{{ prometheusVersion }}.linux-amd64.tar.gz"
        remote_src: yes
        dest: /opt/prometheus
        extra_opts: ["--strip-components=1"]
    - set_fact:
        private_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"

- name: Prometheus setup
  hosts: prometheus-pulsar
  connection: ssh
  become: true
  tasks:
    - file:
        path: "/opt/prometheus/{{ item }}"
        state: directory
      with_items:
        - data
    - template:
        src: "pulsar/templates/prometheus.service"
        dest: "/etc/systemd/system/prometheus.service"
    - template:
        src: "pulsar/templates/pulsar-dashboard.service"
        dest: "/etc/systemd/system/pulsar-dashboard.service"
    - template:
        src: "pulsar/templates/prometheus.yml"
        dest: "/opt/prometheus/prometheus.yml"
    - systemd:
        state: restarted
        daemon_reload: yes
        name: "prometheus"
    - systemd:
        state: restarted
        daemon_reload: yes
        name: "pulsar-dashboard"

- name: List host addresses
  hosts: localhost
  become: false
  tasks:
    - debug:
        msg: "Zookeeper servers {{ item }}"
      with_items: "{{ groups['zookeeper-pulsar'] }}"
    - debug:
        msg: "Pulsar/BookKeeper servers {{ item }}"
      with_items: "{{ groups['broker'] }}"
    - debug:
        msg: "Benchmark clients {{ item }}"
      with_items: "{{ groups['client-pulsar'] }}"
    - debug:
        msg: "Prometheus servers {{ item }}"
      with_items: "{{ groups['prometheus-pulsar'] }}"
